#!/usr/bin/env ruby
require 'gli'
require 'tureng'

# begin # XXX: Remove this begin/rescue before distributing your app
# rescue LoadError
#   STDERR.puts "In development, you need to use `bundle exec bin/tureng` to run your app"
#   STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
#   STDERR.puts "Feel free to remove this message from bin/tureng now"
#   exit 64
# end

include GLI::App
include Tureng

program_desc 'Describe your application here'

version Tureng::VERSION

desc 'Define limit of translation to be shown'
flag [:l, :limit], default_value: nil

desc 'Search translation in "other terms" table'
switch [:f, :full]

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

desc 'Translates English word to Turkish'
command :en do |c|
  c.action do |global_options, options, args|
    settings = {}
    settings[:language_code] = :en
    settings[:limit] = global_options[:limit].to_i if global_options[:limit]
    settings[:table_type] = 'full' if global_options[:full]
    Translator.new(args.first, settings).draw_table
  end
end

desc 'Translate Turkish word to English'
command :tr do |c|
  c.action do |global_options, options, args|
    settings = {}
    settings[:language_code] = :tr
    settings[:limit] = global_options[:limit].to_i if global_options[:limit]
    settings[:table_type] = 'full' if global_options[:f]
    Translator.new(args.first, settings).draw_table
  end
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
